CPP
> methodu parantezli ve parantezsiz kullanım farkı (legal goruyor ama hata veriyor)
> rifat coleksen in veriyapılarını cpp de implement etsem cok mu cılgın olur 
> static linkleme asamasında linkerin sembolu her yerde aramasaı externden farkı
> static fonksyon olustugunda edildiginde sadece cpp dosyasında "visible" olur

CPP_OOP
> sfml özelliklerini nesneye verebilir miyim 
    >position,texture, vb evet verebilirim türetmemede gerek yok zaten neden olsun ki
    > "m_Loglevel" bu "convention" un amacı m_ -> private member variable
    > public keywordu class icinde tekrarlı kullanılabilir methodlar ve degiskenler icin ?

HEADERS
> bir fonksyonu boş bir şekilde birden fazla .cpp de nasıl kullanırsın
> headers tanım yapmak icin kullanılır ve bunları copy paste etmek icin
> implementasyon degismezze bosuna derlememek icin 
(yada lazım olan yerlede)
    > .h ile 
> pragma once ve ifndef birbirinin aynı pragma once kullan
    >neden ? aynı tanımları birden fazla include etmemek icin

> neden classların header ve cpp dosyaları birbirinden farklı bu zorluğa neden deyiyor
    > derleme kolaylığı 
    > cpp compiler file file oldugu icin onemsemez sadece cpp "translation unit" olarak gorur
        > translation unit = source file + directly or undirectly included header + preprocessing
            > ulitemate meaningful thing for compiler

MAKEFILE 
> en üst output icin gerisi dependencies icin 

target: dependencies
    action